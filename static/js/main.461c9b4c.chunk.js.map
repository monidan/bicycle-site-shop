{"version":3,"sources":["Assets/e-bike-article.jpg","Components/NavBar/NavBar.js","Components/TextCard.js","textValues.js","Components/Header/Header.js","Components/AboutUs/AboutUs.js","Views/Homepage.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","state","cartTotal","className","href","icon","faShoppingBasket","this","Component","TextCard","Typography","variant","mainText","primaryText","myTexts","header","captionText","aboutUs","heading","caption","Header","scrollDown","bind","console","log","text","texts","find","id","Container","maxWidth","onClick","AboutUs","src","require","alt","Homepage","React","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8NAAAA,EAAOC,QAAU,IAA0B,4C,4JCItBC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDA,MAAQA,EACb,EAAKC,MAAQ,CACTC,UAAW,GAJA,E,qDAQf,OACE,yBAAKC,UAAU,kBACP,yBAAKA,UAAU,iBACb,wCAEF,wBAAIA,UAAU,YACV,wBAAIA,UAAU,YACV,uBAAGC,KAAK,KAAR,UAEJ,wBAAID,UAAU,YACV,uBAAGC,KAAK,KAAR,eAEJ,wBAAID,UAAU,YACV,uBAAGC,KAAK,KAAR,gBAGR,yBAAKD,UAAU,cACX,kBAAC,IAAD,CAAiBA,UAAU,cAAcE,KAAMC,MAC/C,uBAAGF,KAAK,KAAR,UAAmB,0BAAMD,UAAU,cAAhB,IAA+BI,KAAKN,MAAMC,UAA1C,Y,GA3BLM,a,QCDfC,E,uKAEb,OACI,yBAAKN,UAAWI,KAAKP,MAAMG,WACvB,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAU,oBAC9BI,KAAKP,MAAMY,UAEhB,kBAACF,EAAA,EAAD,CAAYC,QAAQ,YAAYR,UAAU,sBACrCI,KAAKP,MAAMa,kB,GARML,aCHzBM,G,MAAU,CACnB,CACIC,OAAQ,CACJH,SAAU,oCACVI,YAAa,uEAGrB,CACIC,QAAS,CACLC,QAAS,wBACTC,QAAS,0mB,QCFAC,E,kDACjB,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAEDqB,WAAa,EAAKA,WAAWC,KAAhB,gBAHH,E,yDAOfC,QAAQC,IAAI,qB,+BAIZ,IAAIC,EAAOC,EAAMC,MAAK,SAAAF,GAAI,OAAIA,EAAI,UAClC,OACI,yBAAKG,GAAG,UACJ,kBAACC,EAAA,EAAD,CAAWC,SAAU,MACjB,kBAAC,EAAD,MACA,yBAAK3B,UAAU,oBACX,kBAAC,EAAD,CAAUS,SAAUa,EAAKV,OAAOH,SACvBC,YAAaY,EAAKV,OAAOC,YACzBb,UAAU,sBACnB,kBAAC,IAAD,CAAoBA,UAAU,aACV4B,QAASxB,KAAKc,oB,GAtBtBb,aCFfwB,G,6KAEb,IAAIP,EAAOC,EAAMC,MAAK,SAAAF,GAAI,OAAIA,EAAKR,WAC/BC,EAAUO,EAAKR,QAAQC,QACvBC,EAAUM,EAAKR,QAAQE,QAC3B,OACI,kBAACU,EAAA,EAAD,CAAWC,SAAS,MAChB,yBAAKF,GAAG,YACJ,6BAASzB,UAAU,qBACf,yBAAKA,UAAU,yBACX,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAU,WAC9Be,GAEL,kBAACR,EAAA,EAAD,CAAYC,QAAQ,YAAYR,UAAU,WACrCgB,GAEL,yBAAKhB,UAAU,8BACX,uBAAGC,KAAK,GAAGD,UAAU,mCAArB,eAKR,yBAAKA,UAAU,6BACX,yBAAK8B,IAAKC,EAAQ,IACbC,IAAI,SACJhC,UAAU,4B,GAzBNK,cCDhB4B,E,uKAEb,OACE,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALwBC,IAAM7B,WCQ7B8B,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,c","file":"static/js/main.461c9b4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/e-bike-article.8b8e9d49.jpg\";","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faShoppingBasket} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class NavBar extends Component{\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {\n            cartTotal: 0\n        }\n    }\n    render() {\n        return(\n          <div className=\"navigation-bar\">\n                  <div className=\"nav-logo logo\">\n                    <p>Bikeshop</p>\n                  </div>\n                  <ul className='nav-list'>\n                      <li className='nav-item'>\n                          <a href=\"#\">Bikes</a>\n                      </li>\n                      <li className='nav-item'>\n                          <a href=\"#\">Components</a>\n                      </li>\n                      <li className='nav-item'>\n                          <a href=\"#\">Accesories</a>\n                      </li>\n                  </ul>\n                  <div className=\"nav-basket\">\n                      <FontAwesomeIcon className='basket-icon' icon={faShoppingBasket}/>\n                      <a href='#'>Basket <span className='cart-total'>({this.state.cartTotal})</span></a>\n                  </div>\n          </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default class TextCard extends Component{\n    render() {\n        return(\n            <div className={this.props.className}>\n                <Typography variant='h1' className='text-card__title'>\n                    {this.props.mainText}\n                </Typography>\n                <Typography variant='subtitle1' className='text-card__caption'>\n                    {this.props.primaryText}\n                </Typography>\n            </div>\n\n        );\n    }\n}","export const myTexts = [\n    {\n        header: {\n            mainText: 'Welcome to the world of bicycles!',\n            captionText: 'There is unlimited choice and high quality. Find your bicy-friend!',\n        }\n    },\n    {\n        aboutUs: {\n            heading: 'History of the e-bike',\n            caption: 'It seems e-bikes are everywhere in 2020. Formerly a niche product, e-bikes truly have gone mainstream. The number of e-bike companies has exploded and there’s a huge variety of models to choose from. Most of these companies have very little history in the bicycle world. The differences between e-bike models is much greater than you see between regular bikes, and lots of folks don’t know what to make of all of the options and variables. After this read, you\\'ll be educated about e-bikes in general, as well as the seemingly subtle, yet important differences in how we\\'ve approached it at Rodriguez.'\n        }\n    }\n\n]","import React, {Component} from 'react';\nimport {Container} from \"@material-ui/core\";\nimport NavBar from \"../NavBar/NavBar\";\nimport TextCard from \"../TextCard\";\nimport './headerStyles.css';\nimport {myTexts as texts} from \"../../textValues\";\nimport {AiOutlineArrowDown} from 'react-icons/ai';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollDown = this.scrollDown.bind(this);\n    }\n\n    scrollDown() {\n        console.log('Button clicked.')\n    }\n\n    render() {\n        let text = texts.find(text => text['header'])\n        return (\n            <div id='header'>\n                <Container maxWidth={\"lg\"}>\n                    <NavBar />\n                    <div className='header__greeting'>\n                        <TextCard mainText={text.header.mainText}\n                                 primaryText={text.header.captionText}\n                                 className='header__text-card'/>\n                        <AiOutlineArrowDown className='arrow-down'\n                                            onClick={this.scrollDown}/>\n                        </div>\n                </Container>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Container} from \"@material-ui/core\";\nimport './aboutUs.css';\nimport {myTexts as texts} from \"../../textValues\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default class AboutUs extends Component{\n    render() {\n        let text = texts.find(text => text.aboutUs);\n        let heading = text.aboutUs.heading,\n            caption = text.aboutUs.caption;\n        return (\n            <Container maxWidth='lg'>\n                <div id='about-us'>\n                    <article className=\"about-us__article\">\n                        <div className='about-us__description'>\n                            <Typography variant='h2' className='heading'>\n                                {heading}\n                            </Typography>\n                            <Typography variant='subtitle1' className='caption'>\n                                {caption}\n                            </Typography>\n                            <div className=\"about-us__button-container\">\n                                <a href=\"\" className=\"button about-us__button caption\">\n                                    Read more\n                                </a>\n                            </div>\n                        </div>\n                        <div className=\"about-us__image-container\">\n                            <img src={require('../../Assets/e-bike-article.jpg')}\n                                 alt=\"e-bike\"\n                                 className='about-us__image'/>\n                        </div>\n                    </article>\n                </div>\n            </Container>\n        );\n    }\n}","import React from \"react\";\nimport Header from '../Components/Header/Header';\nimport AboutUs from \"../Components/AboutUs/AboutUs\";\n\n\nexport default class Homepage extends React.Component{\n    render() {\n        return (\n          <>\n              <Header />\n              <AboutUs />\n          </>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport 'materialize-css';\nimport Homepage from \"../../Views/Homepage\";\n\nfunction App() {\n  return (\n    <>\n      <Homepage />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}